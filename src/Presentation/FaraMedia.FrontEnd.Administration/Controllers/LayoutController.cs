namespace FaraMedia.FrontEnd.Administration.Controllers {
    using System.Web.Mvc;

    using FaraMedia.Data.Schemas.Billing;
    using FaraMedia.Data.Schemas.Layout;
    using FaraMedia.Data.Schemas.Layout.Sections;
    using FaraMedia.Data.Schemas.Root;
    using FaraMedia.Data.Schemas.Security;
    using FaraMedia.Services.Security;
    using FaraMedia.Web.Framework.Mvc.Controllers;
    using FaraMedia.Web.Framework.UI.Navigation;
    using FaraMedia.Web.Framework.UI.Sectionation;

    public class LayoutController : FaraControllerBase {
        [NonAction]
        public MenuBuilderContext BuildPrimaryMenus(string sectionName = null) {
            var menuBuilder = MenuBuilder.New;

            menuBuilder.AddTag(sectionName);

            menuBuilder.AddNonClickable(TemplateConstants.Navigations.TopBarMenu.Primary.Main, GenresSectionConstants.SectionName, PublishersSectionConstants.SectionName, ArtistsSectionConstants.SectionName, AlbumsSectionConstants.SectionName, TracksSectionConstants.SectionName)
                .Add(GenresSectionConstants.RouteName, GenresSectionConstants.Metadata.Title, GenresSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.FundamentalsSection))
                .Add(GenresSectionConstants.FundamentalsController.List.RouteName, GenresSectionConstants.FundamentalsController.List.Metadata.Title, GenresSectionConstants.FundamentalsController.List.Defaults, GenresSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageGenres))
                .Add(GenresSectionConstants.FundamentalsController.New.RouteName, GenresSectionConstants.FundamentalsController.New.Metadata.Title, GenresSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageGenres))
                .AddSeparator()
                .Add(PublishersSectionConstants.RouteName, PublishersSectionConstants.Metadata.Title, PublishersSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.FundamentalsSection))
                .Add(PublishersSectionConstants.FundamentalsController.List.RouteName, PublishersSectionConstants.FundamentalsController.List.Metadata.Title, PublishersSectionConstants.FundamentalsController.List.Defaults, PublishersSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManagePublishers))
                .Add(PublishersSectionConstants.FundamentalsController.New.RouteName, PublishersSectionConstants.FundamentalsController.New.Metadata.Title, PublishersSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManagePublishers))
                .AddSeparator()
                .Add(ArtistsSectionConstants.RouteName, ArtistsSectionConstants.Metadata.Title, ArtistsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.FundamentalsSection))
                .Add(ArtistsSectionConstants.FundamentalsController.List.RouteName, ArtistsSectionConstants.FundamentalsController.List.Metadata.Title, ArtistsSectionConstants.FundamentalsController.List.Defaults, ArtistsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageArtists))
                .Add(ArtistsSectionConstants.FundamentalsController.New.RouteName, ArtistsSectionConstants.FundamentalsController.New.Metadata.Title, ArtistsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageArtists))
                .AddSeparator()
                .Add(AlbumsSectionConstants.RouteName, AlbumsSectionConstants.Metadata.Title, AlbumsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.FundamentalsSection))
                .Add(AlbumsSectionConstants.FundamentalsController.List.RouteName, AlbumsSectionConstants.FundamentalsController.List.Metadata.Title, AlbumsSectionConstants.FundamentalsController.List.Defaults, AlbumsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageAlbums))
                .Add(AlbumsSectionConstants.FundamentalsController.New.RouteName, AlbumsSectionConstants.FundamentalsController.New.Metadata.Title, AlbumsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageAlbums))
                .AddSeparator()
                .Add(TracksSectionConstants.RouteName, TracksSectionConstants.Metadata.Title, TracksSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.FundamentalsSection))
                .Add(TracksSectionConstants.FundamentalsController.List.RouteName, TracksSectionConstants.FundamentalsController.List.Metadata.Title, TracksSectionConstants.FundamentalsController.List.Defaults, TracksSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageTracks))
                .Add(TracksSectionConstants.FundamentalsController.New.RouteName, TracksSectionConstants.FundamentalsController.New.Metadata.Title, TracksSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageTracks));

            menuBuilder.AddNonClickable(TemplateConstants.Navigations.TopBarMenu.Primary.Billing, BillingSectionConstants.SectionName)
                .Add(BillingSectionConstants.RouteName, BillingSectionConstants.Metadata.Title, BillingSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.BillingSection))
                .Add(BillingSectionConstants.TransactionDebugsController.List.RouteName, BillingSectionConstants.TransactionDebugsController.List.Metadata.Title, BillingSectionConstants.TransactionDebugsController.List.Defaults, BillingSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageTransactionDebugs))
                .AddSeparator()
                .Add(OrdersSectionConstants.RouteName, OrdersSectionConstants.Metadata.Title, OrdersSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.BillingSection))
                .Add(OrdersSectionConstants.BillingController.List.RouteName, OrdersSectionConstants.BillingController.List.Metadata.Title, OrdersSectionConstants.BillingController.List.Defaults, OrdersSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageOrders))
                .Add(OrdersSectionConstants.BillingController.New.RouteName, OrdersSectionConstants.BillingController.New.Metadata.Title, OrdersSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageOrders));

            menuBuilder.AddNonClickable(TemplateConstants.Navigations.TopBarMenu.Primary.ContentManagement, PagesSectionConstants.SectionName,
                                        BloggingSectionConstants.RouteName, NewsSectionConstants.RouteName, PollingSectionConstants.RouteName)
                .Add(PagesSectionConstants.RouteName, PagesSectionConstants.Metadata.Title, PagesSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ContentManagementSection))
                .Add(PagesSectionConstants.GroupsController.List.RouteName, PagesSectionConstants.GroupsController.List.Metadata.Title, PagesSectionConstants.GroupsController.List.Defaults, PagesSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageGroups))
                .Add(PagesSectionConstants.GroupsController.New.RouteName, PagesSectionConstants.GroupsController.New.Metadata.Title, PagesSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageGroups))
                .Add(PagesSectionConstants.ContentManagementController.List.RouteName, PagesSectionConstants.ContentManagementController.List.Metadata.Title, PagesSectionConstants.ContentManagementController.List.Defaults, PagesSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManagePages))
                .Add(PagesSectionConstants.ContentManagementController.New.RouteName, PagesSectionConstants.ContentManagementController.New.Metadata.Title, PagesSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManagePages))
                .AddSeparator()
                .Add(BloggingSectionConstants.RouteName, BloggingSectionConstants.Metadata.Title, BloggingSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ContentManagementSection))
                .Add(BloggingSectionConstants.BlogsController.List.RouteName, BloggingSectionConstants.BlogsController.List.Metadata.Title, BloggingSectionConstants.BlogsController.List.Defaults, BloggingSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageBlogs))
                .Add(BloggingSectionConstants.BlogsController.New.RouteName, BloggingSectionConstants.BlogsController.New.Metadata.Title, BloggingSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageBlogs))
                .AddSeparator()
                .Add(NewsSectionConstants.RouteName, NewsSectionConstants.Metadata.Title, NewsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ContentManagementSection))
                .Add(NewsSectionConstants.CategoriesController.List.RouteName, NewsSectionConstants.CategoriesController.List.Metadata.Title, NewsSectionConstants.CategoriesController.List.Defaults, NewsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageCategories))
                .Add(NewsSectionConstants.CategoriesController.New.RouteName, NewsSectionConstants.CategoriesController.New.Metadata.Title, NewsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageCategories))
                .Add(NewsSectionConstants.ContentManagementController.List.RouteName, NewsSectionConstants.ContentManagementController.List.Metadata.Title, NewsSectionConstants.ContentManagementController.List.Defaults, NewsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageNews))
                .Add(NewsSectionConstants.ContentManagementController.New.RouteName, NewsSectionConstants.ContentManagementController.New.Metadata.Title, NewsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageNews))
                .AddSeparator()
                .Add(PollingSectionConstants.RouteName, PollingSectionConstants.Metadata.Title, PollingSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ContentManagementSection))
                .Add(PollingSectionConstants.PollsController.List.RouteName, PollingSectionConstants.PollsController.List.Metadata.Title, PollingSectionConstants.PollsController.List.Defaults, PollingSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManagePolls))
                .Add(PollingSectionConstants.PollsController.New.RouteName, PollingSectionConstants.PollsController.New.Metadata.Title, PollingSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManagePolls));

            menuBuilder.AddNonClickable(TemplateConstants.Navigations.TopBarMenu.Primary.FileManagement, MediaSectionConstants.SectionName)
                .Add(MediaSectionConstants.RouteName, MediaSectionConstants.Metadata.Title, MediaSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.FileManagementSection))
                .Add(MediaSectionConstants.DownloadsController.List.RouteName, MediaSectionConstants.DownloadsController.List.Metadata.Title, MediaSectionConstants.DownloadsController.List.Defaults, MediaSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageDownloads))
                .Add(MediaSectionConstants.DownloadsController.New.RouteName, MediaSectionConstants.DownloadsController.New.Metadata.Title, MediaSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageDownloads))
                .Add(MediaSectionConstants.PicturesController.List.RouteName, MediaSectionConstants.PicturesController.List.Metadata.Title, MediaSectionConstants.PicturesController.List.Defaults, MediaSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManagePictures))
                .Add(MediaSectionConstants.PicturesController.New.RouteName, MediaSectionConstants.PicturesController.New.Metadata.Title, MediaSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManagePictures));

            menuBuilder.AddNonClickable(TemplateConstants.Navigations.TopBarMenu.Primary.Security, MembershipSectionConstants.SectionName, SecuritySectionConstants.SectionName)
                .Add(MembershipSectionConstants.RouteName, MembershipSectionConstants.Metadata.Title, MembershipSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.SecuritySection))
                .Add(MembershipSectionConstants.RolesController.List.RouteName, MembershipSectionConstants.RolesController.List.Metadata.Title, MembershipSectionConstants.RolesController.List.Defaults, MembershipSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageRoles))
                .Add(MembershipSectionConstants.RolesController.New.RouteName, MembershipSectionConstants.RolesController.New.Metadata.Title, MembershipSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageRoles))
                .Add(MembershipSectionConstants.UsersController.List.RouteName, MembershipSectionConstants.UsersController.List.Metadata.Title, MembershipSectionConstants.UsersController.List.Defaults, MembershipSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageUsers))
                .Add(MembershipSectionConstants.UsersController.New.RouteName, MembershipSectionConstants.UsersController.New.Metadata.Title, MembershipSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageUsers))
                .AddSeparator()
                .Add(SecuritySectionConstants.RouteName, SecuritySectionConstants.Metadata.Title, SecuritySectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.SecuritySection))
                .Add(SecuritySectionConstants.BannedIpsController.List.RouteName, SecuritySectionConstants.BannedIpsController.List.Metadata.Title, SecuritySectionConstants.BannedIpsController.List.Defaults, SecuritySectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageBannedIps))
                .Add(SecuritySectionConstants.BannedIpsController.New.RouteName, SecuritySectionConstants.BannedIpsController.New.Metadata.Title, SecuritySectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageBannedIps))
                .Add(SecuritySectionConstants.PermissionRecordsController.List.RouteName, SecuritySectionConstants.PermissionRecordsController.List.Metadata.Title, SecuritySectionConstants.PermissionRecordsController.List.Defaults, SecuritySectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManagePermissionRecords))
                .Add(SecuritySectionConstants.PermissionRecordsController.New.RouteName, SecuritySectionConstants.PermissionRecordsController.New.Metadata.Title, SecuritySectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManagePermissionRecords));

            menuBuilder.AddNonClickable(TemplateConstants.Navigations.TopBarMenu.Primary.Configuration, SettingsSectionConstants.SectionName, ConfigurationSectionConstants.SectionName)
                .Add(SettingsSectionConstants.RouteName, SettingsSectionConstants.Metadata.Title, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ConfigurationSection))
                .Add(SettingsSectionConstants.AdminAreaSettingsController.Save.RouteName, SettingsSectionConstants.AdminAreaSettingsController.Save.Metadata.Title, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageSettings))
                .Add(SettingsSectionConstants.ApplicationSettingsController.Save.RouteName, SettingsSectionConstants.ApplicationSettingsController.Save.Metadata.Title, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageSettings))
                .Add(SettingsSectionConstants.BillingSettingsController.Save.RouteName, SettingsSectionConstants.BillingSettingsController.Save.Metadata.Title, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageSettings))
                .Add(SettingsSectionConstants.ContentSettingsController.Save.RouteName, SettingsSectionConstants.ContentSettingsController.Save.Metadata.Title, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageSettings))
                .Add(SettingsSectionConstants.CdnSettingsController.Save.RouteName, SettingsSectionConstants.CdnSettingsController.Save.Metadata.Title, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageSettings))
                .Add(SettingsSectionConstants.CommonSettingsController.Save.RouteName, SettingsSectionConstants.CommonSettingsController.Save.Metadata.Title, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageSettings))
                .Add(SettingsSectionConstants.DateTimeSettingsController.Save.RouteName, SettingsSectionConstants.DateTimeSettingsController.Save.Metadata.Title, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageSettings))
                .Add(SettingsSectionConstants.EmailAccountSettingsController.Save.RouteName, SettingsSectionConstants.EmailAccountSettingsController.Save.Metadata.Title, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageSettings))
                .Add(SettingsSectionConstants.SystematicSettingsController.Save.RouteName, SettingsSectionConstants.SystematicSettingsController.Save.Metadata.Title, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageSettings))
                .Add(SettingsSectionConstants.FileManagementSettingsController.Save.RouteName, SettingsSectionConstants.FileManagementSettingsController.Save.Metadata.Title, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageSettings))
                .Add(SettingsSectionConstants.SecuritySettingsController.Save.RouteName, SettingsSectionConstants.SecuritySettingsController.Save.Metadata.Title, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageSettings))
                .Add(SettingsSectionConstants.MessageTemplateSettingsController.Save.RouteName, SettingsSectionConstants.MessageTemplateSettingsController.Save.Metadata.Title, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageSettings))
                .Add(SettingsSectionConstants.ContentManagementSettingsController.Save.RouteName, SettingsSectionConstants.ContentManagementSettingsController.Save.Metadata.Title, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageSettings))
                .Add(SettingsSectionConstants.SecuritySettingsController.Save.RouteName, SettingsSectionConstants.SecuritySettingsController.Save.Metadata.Title, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageSettings))
                .Add(SettingsSectionConstants.SeoSettingsController.Save.RouteName, SettingsSectionConstants.SeoSettingsController.Save.Metadata.Title, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageSettings))
                .Add(SettingsSectionConstants.SitemapSettingsController.Save.RouteName, SettingsSectionConstants.SitemapSettingsController.Save.Metadata.Title, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageSettings))
                .Add(SettingsSectionConstants.MiscellaneousSettingsController.Save.RouteName, SettingsSectionConstants.MiscellaneousSettingsController.Save.Metadata.Title, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageSettings))
                .AddSeparator()
                .Add(ConfigurationSectionConstants.RouteName, ConfigurationSectionConstants.Metadata.Title, ConfigurationSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ConfigurationSection))
                .Add(ConfigurationSectionConstants.ConfigurationController.List.RouteName, ConfigurationSectionConstants.ConfigurationController.List.Metadata.Title, ConfigurationSectionConstants.ConfigurationController.List.Defaults, ConfigurationSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageSettings))
                .Add(ConfigurationSectionConstants.ConfigurationController.New.RouteName, ConfigurationSectionConstants.ConfigurationController.New.Metadata.Title, ConfigurationSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageSettings));

            menuBuilder.AddNonClickable(TemplateConstants.Navigations.TopBarMenu.Primary.Miscellaneous, StatisticsSectionConstants.SectionName, TicketingSectionConstants.SectionName, UtilitiesSectionConstants.SectionName)
                .Add(StatisticsSectionConstants.RouteName, StatisticsSectionConstants.Metadata.Title, StatisticsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.MiscellaneousSection))
                .Add(StatisticsSectionConstants.RedirectorsController.List.RouteName, StatisticsSectionConstants.RedirectorsController.List.Metadata.Title, StatisticsSectionConstants.RedirectorsController.List.Defaults, StatisticsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageRedirectors))
                .Add(StatisticsSectionConstants.RedirectorsController.New.RouteName, StatisticsSectionConstants.RedirectorsController.New.Metadata.Title, StatisticsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageRedirectors))
                .AddSeparator()
                .Add(TicketingSectionConstants.RouteName, TicketingSectionConstants.Metadata.Title, TicketingSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.MiscellaneousSection))
                .Add(TicketingSectionConstants.TicketsController.List.RouteName, TicketingSectionConstants.TicketsController.List.Metadata.Title, TicketingSectionConstants.TicketsController.List.Defaults, TicketingSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageTickets))
                .Add(TicketingSectionConstants.TicketsController.New.RouteName, TicketingSectionConstants.TicketsController.New.Metadata.Title, TicketingSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageTickets))
                .AddSeparator()
                .Add(UtilitiesSectionConstants.RouteName, UtilitiesSectionConstants.Metadata.Title, UtilitiesSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.MiscellaneousSection))
                .Add(UtilitiesSectionConstants.ToDosController.List.RouteName, UtilitiesSectionConstants.ToDosController.List.Metadata.Title, UtilitiesSectionConstants.ToDosController.List.Defaults, UtilitiesSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageToDos))
                .Add(UtilitiesSectionConstants.ToDosController.New.RouteName, UtilitiesSectionConstants.ToDosController.New.Metadata.Title, UtilitiesSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageToDos));

            menuBuilder.AddNonClickable(TemplateConstants.Navigations.TopBarMenu.Primary.Systematic, MessagesSectionConstants.SectionName, LocalizationSectionConstants.SectionName, LoggingSectionConstants.SectionName, TasksSectionConstants.SectionName)
                .Add(MessagesSectionConstants.RouteName, MessagesSectionConstants.Metadata.Title, MessagesSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.SystematicSection))
                .Add(MessagesSectionConstants.EmailAccountsController.List.RouteName, MessagesSectionConstants.EmailAccountsController.List.Metadata.Title, MessagesSectionConstants.EmailAccountsController.List.Defaults, MessagesSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageEmailAccounts))
                .Add(MessagesSectionConstants.EmailAccountsController.New.RouteName, MessagesSectionConstants.EmailAccountsController.New.Metadata.Title, MessagesSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageEmailAccounts))
                .Add(MessagesSectionConstants.MessageTemplatesController.List.RouteName, MessagesSectionConstants.MessageTemplatesController.List.Metadata.Title, MessagesSectionConstants.MessageTemplatesController.List.Defaults, MessagesSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageMessageTemplates))
                .Add(MessagesSectionConstants.MessageTemplatesController.New.RouteName, MessagesSectionConstants.MessageTemplatesController.New.Metadata.Title, MessagesSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageMessageTemplates))
                .Add(MessagesSectionConstants.ContentManagementletterSubscriptionsController.List.RouteName, MessagesSectionConstants.ContentManagementletterSubscriptionsController.List.Metadata.Title, MessagesSectionConstants.ContentManagementletterSubscriptionsController.List.Defaults, MessagesSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageNewsletterSubscriptions))
                .Add(MessagesSectionConstants.ContentManagementletterSubscriptionsController.New.RouteName, MessagesSectionConstants.ContentManagementletterSubscriptionsController.New.Metadata.Title, MessagesSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageNewsletterSubscriptions))
                .Add(MessagesSectionConstants.QueuedEmailsController.List.RouteName, MessagesSectionConstants.QueuedEmailsController.List.Metadata.Title, MessagesSectionConstants.QueuedEmailsController.List.Defaults, MessagesSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageQueuedEmails))
                .Add(MessagesSectionConstants.QueuedEmailsController.New.RouteName, MessagesSectionConstants.QueuedEmailsController.New.Metadata.Title, MessagesSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageQueuedEmails))
                .AddSeparator()
                .Add(LocalizationSectionConstants.RouteName, LocalizationSectionConstants.Metadata.Title, LocalizationSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.SystematicSection))
                .Add(LocalizationSectionConstants.LanguagesController.List.RouteName, LocalizationSectionConstants.LanguagesController.List.Metadata.Title, LocalizationSectionConstants.LanguagesController.List.Defaults, LocalizationSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageLanguages))
                .Add(LocalizationSectionConstants.LanguagesController.New.RouteName, LocalizationSectionConstants.LanguagesController.New.Metadata.Title, LocalizationSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageLanguages))
                .Add(LocalizationSectionConstants.StringResourcesController.List.RouteName, LocalizationSectionConstants.StringResourcesController.List.Metadata.Title, LocalizationSectionConstants.StringResourcesController.List.Defaults, LocalizationSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageStringResources))
                .Add(LocalizationSectionConstants.StringResourcesController.New.RouteName, LocalizationSectionConstants.StringResourcesController.New.Metadata.Title, LocalizationSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageStringResources))
                .AddSeparator()
                .Add(LoggingSectionConstants.RouteName, LoggingSectionConstants.Metadata.Title, LoggingSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.SystematicSection))
                .Add(LoggingSectionConstants.ActivityTypesController.List.RouteName, LoggingSectionConstants.ActivityTypesController.List.Metadata.Title, LoggingSectionConstants.ActivityTypesController.List.Defaults, LoggingSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageActivityTypes))
                .Add(LoggingSectionConstants.ActivityTypesController.New.RouteName, LoggingSectionConstants.ActivityTypesController.New.Metadata.Title, LoggingSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageActivityTypes))
                .Add(LoggingSectionConstants.ActivitiesController.List.RouteName, LoggingSectionConstants.ActivitiesController.List.Metadata.Title, LoggingSectionConstants.ActivitiesController.List.Defaults, LoggingSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageActivities))
                .Add(LoggingSectionConstants.LogsController.List.RouteName, LoggingSectionConstants.LogsController.List.Metadata.Title, LoggingSectionConstants.LogsController.List.Defaults, LoggingSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageLogs))
                .AddSeparator()
                .Add(TasksSectionConstants.RouteName, TasksSectionConstants.Metadata.Title, TasksSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.SystematicSection))
                .Add(TasksSectionConstants.ScheduleTasksController.List.RouteName, TasksSectionConstants.ScheduleTasksController.List.Metadata.Title, TasksSectionConstants.ScheduleTasksController.List.Defaults, TasksSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageScheduleTasks))
                .Add(TasksSectionConstants.ScheduleTasksController.New.RouteName, TasksSectionConstants.ScheduleTasksController.New.Metadata.Title, TasksSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageScheduleTasks));

            return menuBuilder;
        }

        [ChildActionOnly]
        public PartialViewResult TopBarPrimaryNavigation() {
            return PartialView(BuildPrimaryMenus());
        }

        [ChildActionOnly]
        public PartialViewResult AsideNavigation(string sectionName = null) {
            return PartialView(BuildPrimaryMenus(sectionName));
        }

        [NonAction]
        public MenuBuilderContext BuildSecondaryMenus() {
            var menuBuilder = MenuBuilder.New;

            menuBuilder.AddNonClickable(RootSectionConstants.MaintenanceController.Metadata.Title)
                .Add(RootSectionConstants.MaintenanceController.RecoverDefaults.RouteName, RootSectionConstants.MaintenanceController.RecoverDefaults.Metadata.Title)
                .If(() => CheckUserization(StandardPermissionProvider.Maintenance))
                .Add(RootSectionConstants.MaintenanceController.ClearCache.RouteName, RootSectionConstants.MaintenanceController.ClearCache.Metadata.Title)
                .If(() => CheckUserization(StandardPermissionProvider.Maintenance))
                .Add(RootSectionConstants.MaintenanceController.RestartApplication.RouteName, RootSectionConstants.MaintenanceController.RestartApplication.Metadata.Title)
                .If(() => CheckUserization(StandardPermissionProvider.Maintenance));

            return menuBuilder;
        }

        [ChildActionOnly]
        public PartialViewResult TopBarSecondaryNavigation() {
            return PartialView(BuildSecondaryMenus());
        }

        [NonAction]
        public SectionBuilderContext BuildSections(string sectionName = null) {
            var sectionBuilder = SectionBuilder.New;

            sectionBuilder.AddTag(sectionName);

            sectionBuilder.AddHeroUnit(RootSectionConstants.Metadata.Title, RootSectionConstants.Metadata.Description)
                .AddSubHeroUnit(GenresSectionConstants.Metadata.Title, GenresSectionConstants.Metadata.Description, GenresSectionConstants.RouteName, GenresSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.FundamentalsSection))
                .Add(GenresSectionConstants.FundamentalsController.List.Metadata.Title, GenresSectionConstants.FundamentalsController.List.Metadata.Description, GenresSectionConstants.FundamentalsController.List.RouteName, GenresSectionConstants.FundamentalsController.List.Defaults, GenresSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageGenres))
                .Add(GenresSectionConstants.FundamentalsController.New.Metadata.Title, GenresSectionConstants.FundamentalsController.New.Metadata.Description, GenresSectionConstants.FundamentalsController.New.RouteName, GenresSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageGenres))
                .AddSubHeroUnit(PublishersSectionConstants.Metadata.Title, PublishersSectionConstants.Metadata.Description, PublishersSectionConstants.RouteName, PublishersSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.FundamentalsSection))
                .Add(PublishersSectionConstants.FundamentalsController.List.Metadata.Title, PublishersSectionConstants.FundamentalsController.List.Metadata.Description, PublishersSectionConstants.FundamentalsController.List.RouteName, PublishersSectionConstants.FundamentalsController.List.Defaults, PublishersSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManagePublishers))
                .Add(PublishersSectionConstants.FundamentalsController.New.Metadata.Title, PublishersSectionConstants.FundamentalsController.New.Metadata.Description, PublishersSectionConstants.FundamentalsController.New.RouteName, PublishersSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManagePublishers))
                .AddSubHeroUnit(ArtistsSectionConstants.Metadata.Title, ArtistsSectionConstants.Metadata.Description, ArtistsSectionConstants.RouteName, ArtistsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.FundamentalsSection))
                .Add(ArtistsSectionConstants.FundamentalsController.List.Metadata.Title, ArtistsSectionConstants.FundamentalsController.List.Metadata.Description, ArtistsSectionConstants.FundamentalsController.List.RouteName, ArtistsSectionConstants.FundamentalsController.List.Defaults, ArtistsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageArtists))
                .Add(ArtistsSectionConstants.FundamentalsController.New.Metadata.Title, ArtistsSectionConstants.FundamentalsController.New.Metadata.Description, ArtistsSectionConstants.FundamentalsController.New.RouteName, ArtistsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageArtists))
                .AddSubHeroUnit(AlbumsSectionConstants.Metadata.Title, AlbumsSectionConstants.Metadata.Description, AlbumsSectionConstants.RouteName, AlbumsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.FundamentalsSection))
                .Add(AlbumsSectionConstants.FundamentalsController.List.Metadata.Title, AlbumsSectionConstants.FundamentalsController.List.Metadata.Description, AlbumsSectionConstants.FundamentalsController.List.RouteName, AlbumsSectionConstants.FundamentalsController.List.Defaults, AlbumsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageAlbums))
                .Add(AlbumsSectionConstants.FundamentalsController.New.Metadata.Title, AlbumsSectionConstants.FundamentalsController.New.Metadata.Description, AlbumsSectionConstants.FundamentalsController.New.RouteName, AlbumsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageAlbums))
                .AddSubHeroUnit(TracksSectionConstants.Metadata.Title, TracksSectionConstants.Metadata.Description, TracksSectionConstants.RouteName, TracksSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.FundamentalsSection))
                .Add(TracksSectionConstants.FundamentalsController.List.Metadata.Title, TracksSectionConstants.FundamentalsController.List.Metadata.Description, TracksSectionConstants.FundamentalsController.List.RouteName, TracksSectionConstants.FundamentalsController.List.Defaults, TracksSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageTracks))
                .Add(TracksSectionConstants.FundamentalsController.New.Metadata.Title, TracksSectionConstants.FundamentalsController.New.Metadata.Description, TracksSectionConstants.FundamentalsController.New.RouteName, TracksSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageTracks))
                .AddSeparator()
                .AddSubHeroUnit(BillingSectionConstants.Metadata.Title, BillingSectionConstants.Metadata.Description, BillingSectionConstants.RouteName, BillingSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.BillingSection))
                .Add(BillingSectionConstants.TransactionDebugsController.List.Metadata.Title, BillingSectionConstants.TransactionDebugsController.List.Metadata.Description, BillingSectionConstants.TransactionDebugsController.List.RouteName, BillingSectionConstants.TransactionDebugsController.List.Defaults, BillingSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageTransactionDebugs))
                .AddSubHeroUnit(OrdersSectionConstants.Metadata.Title, OrdersSectionConstants.Metadata.Description, OrdersSectionConstants.RouteName, OrdersSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.BillingSection))
                .Add(OrdersSectionConstants.BillingController.List.Metadata.Title, OrdersSectionConstants.BillingController.List.Metadata.Description, OrdersSectionConstants.BillingController.List.RouteName, OrdersSectionConstants.BillingController.List.Defaults, OrdersSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageOrders))
                .Add(OrdersSectionConstants.BillingController.New.Metadata.Title, OrdersSectionConstants.BillingController.New.Metadata.Description, OrdersSectionConstants.BillingController.New.RouteName, OrdersSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageOrders))
                .AddSeparator()
                .AddSubHeroUnit(PagesSectionConstants.Metadata.Title, PagesSectionConstants.Metadata.Description, PagesSectionConstants.RouteName, PagesSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ContentManagementSection))
                .Add(PagesSectionConstants.GroupsController.List.Metadata.Title, PagesSectionConstants.GroupsController.List.Metadata.Description, PagesSectionConstants.GroupsController.List.RouteName, PagesSectionConstants.GroupsController.List.Defaults, PagesSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageGroups))
                .Add(PagesSectionConstants.GroupsController.New.Metadata.Title, PagesSectionConstants.GroupsController.New.Metadata.Description, PagesSectionConstants.GroupsController.New.RouteName, PagesSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageGroups))
                .AddInnerSeparator()
                .Add(PagesSectionConstants.ContentManagementController.List.Metadata.Title, PagesSectionConstants.ContentManagementController.List.Metadata.Description, PagesSectionConstants.ContentManagementController.List.RouteName, PagesSectionConstants.ContentManagementController.List.Defaults, PagesSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManagePages))
                .Add(PagesSectionConstants.ContentManagementController.New.Metadata.Title, PagesSectionConstants.ContentManagementController.New.Metadata.Description, PagesSectionConstants.ContentManagementController.New.RouteName, PagesSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManagePages))
                .AddSubHeroUnit(BloggingSectionConstants.Metadata.Title, BloggingSectionConstants.Metadata.Description, BloggingSectionConstants.RouteName, BloggingSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ContentManagementSection))
                .Add(BloggingSectionConstants.BlogsController.List.Metadata.Title, BloggingSectionConstants.BlogsController.List.Metadata.Description, BloggingSectionConstants.BlogsController.List.RouteName, BloggingSectionConstants.BlogsController.List.Defaults, BloggingSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageBlogs))
                .Add(BloggingSectionConstants.BlogsController.New.Metadata.Title, BloggingSectionConstants.BlogsController.New.Metadata.Description, BloggingSectionConstants.BlogsController.New.RouteName, BloggingSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageBlogs))
                .AddInnerSeparator()
                .AddSubHeroUnit(NewsSectionConstants.Metadata.Title, NewsSectionConstants.Metadata.Description, NewsSectionConstants.RouteName, NewsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ContentManagementSection))
                .Add(NewsSectionConstants.CategoriesController.List.Metadata.Title, NewsSectionConstants.CategoriesController.List.Metadata.Description, NewsSectionConstants.CategoriesController.List.RouteName, NewsSectionConstants.CategoriesController.List.Defaults, NewsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageCategories))
                .Add(NewsSectionConstants.CategoriesController.New.Metadata.Title, NewsSectionConstants.CategoriesController.New.Metadata.Description, NewsSectionConstants.CategoriesController.New.RouteName, NewsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageCategories))
                .AddInnerSeparator()
                .Add(NewsSectionConstants.ContentManagementController.List.Metadata.Title, NewsSectionConstants.ContentManagementController.List.Metadata.Description, NewsSectionConstants.ContentManagementController.List.RouteName, NewsSectionConstants.ContentManagementController.List.Defaults, NewsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageNews))
                .Add(NewsSectionConstants.ContentManagementController.New.Metadata.Title, NewsSectionConstants.ContentManagementController.New.Metadata.Description, NewsSectionConstants.ContentManagementController.New.RouteName, NewsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageNews))
                .AddSubHeroUnit(PollingSectionConstants.Metadata.Title, PollingSectionConstants.Metadata.Description, PollingSectionConstants.RouteName, PollingSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ContentManagementSection))
                .Add(PollingSectionConstants.PollsController.List.Metadata.Title, PollingSectionConstants.PollsController.List.Metadata.Description, PollingSectionConstants.PollsController.List.RouteName, PollingSectionConstants.PollsController.List.Defaults, PollingSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManagePolls))
                .Add(PollingSectionConstants.PollsController.New.Metadata.Title, PollingSectionConstants.PollsController.New.Metadata.Description, PollingSectionConstants.PollsController.New.RouteName, PollingSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManagePolls))
                .AddSeparator()
                .AddSubHeroUnit(MediaSectionConstants.Metadata.Title, MediaSectionConstants.Metadata.Description, MediaSectionConstants.RouteName, MediaSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.FileManagementSection))
                .Add(MediaSectionConstants.DownloadsController.List.Metadata.Title, MediaSectionConstants.DownloadsController.List.Metadata.Description, MediaSectionConstants.DownloadsController.List.RouteName, MediaSectionConstants.DownloadsController.List.Defaults, MediaSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageDownloads))
                .Add(MediaSectionConstants.DownloadsController.New.Metadata.Title, MediaSectionConstants.DownloadsController.New.Metadata.Description, MediaSectionConstants.DownloadsController.New.RouteName, MediaSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageDownloads))
                .AddInnerSeparator()
                .Add(MediaSectionConstants.PicturesController.List.Metadata.Title, MediaSectionConstants.PicturesController.List.Metadata.Description, MediaSectionConstants.PicturesController.List.RouteName, MediaSectionConstants.PicturesController.List.Defaults, MediaSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManagePictures))
                .Add(MediaSectionConstants.PicturesController.New.Metadata.Title, MediaSectionConstants.PicturesController.New.Metadata.Description, MediaSectionConstants.PicturesController.New.RouteName, MediaSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManagePictures))
                .AddSeparator()
                .AddSubHeroUnit(MembershipSectionConstants.Metadata.Title, MembershipSectionConstants.Metadata.Description, MembershipSectionConstants.RouteName, MembershipSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.SecuritySection))
                .Add(MembershipSectionConstants.RolesController.List.Metadata.Title, MembershipSectionConstants.RolesController.List.Metadata.Description, MembershipSectionConstants.RolesController.List.RouteName, MembershipSectionConstants.RolesController.List.Defaults, MembershipSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageRoles))
                .Add(MembershipSectionConstants.RolesController.New.Metadata.Title, MembershipSectionConstants.RolesController.New.Metadata.Description, MembershipSectionConstants.RolesController.New.RouteName, MembershipSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageRoles))
                .AddInnerSeparator()
                .Add(MembershipSectionConstants.UsersController.List.Metadata.Title, MembershipSectionConstants.UsersController.List.Metadata.Description, MembershipSectionConstants.UsersController.List.RouteName, MembershipSectionConstants.UsersController.List.Defaults, MembershipSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageUsers))
                .Add(MembershipSectionConstants.UsersController.New.Metadata.Title, MembershipSectionConstants.UsersController.New.Metadata.Description, MembershipSectionConstants.UsersController.New.RouteName, MembershipSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageUsers))
                .AddSubHeroUnit(SecuritySectionConstants.Metadata.Title, SecuritySectionConstants.Metadata.Description, SecuritySectionConstants.RouteName, SecuritySectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.SecuritySection))
                .Add(SecuritySectionConstants.BannedIpsController.List.Metadata.Title, SecuritySectionConstants.BannedIpsController.List.Metadata.Description, SecuritySectionConstants.BannedIpsController.List.RouteName, SecuritySectionConstants.BannedIpsController.List.Defaults, SecuritySectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageBannedIps))
                .Add(SecuritySectionConstants.BannedIpsController.New.Metadata.Title, SecuritySectionConstants.BannedIpsController.New.Metadata.Description, SecuritySectionConstants.BannedIpsController.New.RouteName, SecuritySectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageBannedIps))
                .AddInnerSeparator()
                .Add(SecuritySectionConstants.PermissionRecordsController.List.Metadata.Title, SecuritySectionConstants.PermissionRecordsController.List.Metadata.Description, SecuritySectionConstants.PermissionRecordsController.List.RouteName, SecuritySectionConstants.PermissionRecordsController.List.Defaults, SecuritySectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManagePermissionRecords))
                .Add(SecuritySectionConstants.PermissionRecordsController.New.Metadata.Title, SecuritySectionConstants.PermissionRecordsController.New.Metadata.Description, SecuritySectionConstants.PermissionRecordsController.New.RouteName, SecuritySectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManagePermissionRecords))
                .AddSeparator()
                .AddSubHeroUnit(SettingsSectionConstants.Metadata.Title, SettingsSectionConstants.Metadata.Description, SettingsSectionConstants.RouteName, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ConfigurationSection))
                .Add(SettingsSectionConstants.AdminAreaSettingsController.Save.Metadata.Title, SettingsSectionConstants.AdminAreaSettingsController.Save.Metadata.Description, SettingsSectionConstants.AdminAreaSettingsController.Save.RouteName, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageAdminAreaSettings))
                .Add(SettingsSectionConstants.ApplicationSettingsController.Save.Metadata.Title, SettingsSectionConstants.ApplicationSettingsController.Save.Metadata.Description, SettingsSectionConstants.ApplicationSettingsController.Save.RouteName, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageApplicationSettings))
                .Add(SettingsSectionConstants.BillingSettingsController.Save.Metadata.Title, SettingsSectionConstants.BillingSettingsController.Save.Metadata.Description, SettingsSectionConstants.BillingSettingsController.Save.RouteName, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageBillingSettings))
                .Add(SettingsSectionConstants.ContentSettingsController.Save.Metadata.Title, SettingsSectionConstants.ContentSettingsController.Save.Metadata.Description, SettingsSectionConstants.ContentSettingsController.Save.RouteName, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageContentSettings))
                .Add(SettingsSectionConstants.CdnSettingsController.Save.Metadata.Title, SettingsSectionConstants.CdnSettingsController.Save.Metadata.Description, SettingsSectionConstants.CdnSettingsController.Save.RouteName, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageCdnSettings))
                .Add(SettingsSectionConstants.CommonSettingsController.Save.Metadata.Title, SettingsSectionConstants.CommonSettingsController.Save.Metadata.Description, SettingsSectionConstants.CommonSettingsController.Save.RouteName, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageCommonSettings))
                .Add(SettingsSectionConstants.DateTimeSettingsController.Save.Metadata.Title, SettingsSectionConstants.DateTimeSettingsController.Save.Metadata.Description, SettingsSectionConstants.DateTimeSettingsController.Save.RouteName, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageDateTimeSettings))
                .Add(SettingsSectionConstants.EmailAccountSettingsController.Save.Metadata.Title, SettingsSectionConstants.EmailAccountSettingsController.Save.Metadata.Description, SettingsSectionConstants.EmailAccountSettingsController.Save.RouteName, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageEmailAccountSettings))
                .Add(SettingsSectionConstants.SystematicSettingsController.Save.Metadata.Title, SettingsSectionConstants.SystematicSettingsController.Save.Metadata.Description, SettingsSectionConstants.SystematicSettingsController.Save.RouteName, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageLocalizationSettings))
                .Add(SettingsSectionConstants.FileManagementSettingsController.Save.Metadata.Title, SettingsSectionConstants.FileManagementSettingsController.Save.Metadata.Description, SettingsSectionConstants.FileManagementSettingsController.Save.RouteName, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageFileManagementSettings))
                .Add(SettingsSectionConstants.SecuritySettingsController.Save.Metadata.Title, SettingsSectionConstants.SecuritySettingsController.Save.Metadata.Description, SettingsSectionConstants.SecuritySettingsController.Save.RouteName, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageMembershipSettings))
                .Add(SettingsSectionConstants.MessageTemplateSettingsController.Save.Metadata.Title, SettingsSectionConstants.MessageTemplateSettingsController.Save.Metadata.Description, SettingsSectionConstants.MessageTemplateSettingsController.Save.RouteName, SettingsSectionConstants.MessageTemplateSettingsController.Save.Metadata.Title, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageMessageTemplateSettings))
                .Add(SettingsSectionConstants.ContentManagementSettingsController.Save.Metadata.Title, SettingsSectionConstants.ContentManagementSettingsController.Save.Metadata.Description, SettingsSectionConstants.ContentManagementSettingsController.Save.RouteName, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageNewsSettings))
                .Add(SettingsSectionConstants.SecuritySettingsController.Save.Metadata.Title, SettingsSectionConstants.SecuritySettingsController.Save.Metadata.Description, SettingsSectionConstants.SecuritySettingsController.Save.RouteName, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageSecuritySettings))
                .Add(SettingsSectionConstants.SeoSettingsController.Save.Metadata.Title, SettingsSectionConstants.SeoSettingsController.Save.Metadata.Description, SettingsSectionConstants.SeoSettingsController.Save.RouteName, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageSeoSettings))
                .Add(SettingsSectionConstants.SitemapSettingsController.Save.Metadata.Title, SettingsSectionConstants.SitemapSettingsController.Save.Metadata.Description, SettingsSectionConstants.SitemapSettingsController.Save.RouteName, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageSitemapSettings))
                .Add(SettingsSectionConstants.MiscellaneousSettingsController.Save.Metadata.Title, SettingsSectionConstants.MiscellaneousSettingsController.Save.Metadata.Description, SettingsSectionConstants.MiscellaneousSettingsController.Save.RouteName, SettingsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageMiscellaneousSettings))
                .AddSubHeroUnit(ConfigurationSectionConstants.Metadata.Title, ConfigurationSectionConstants.Metadata.Description, ConfigurationSectionConstants.RouteName, ConfigurationSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ConfigurationSection))
                .Add(ConfigurationSectionConstants.ConfigurationController.List.Metadata.Title, ConfigurationSectionConstants.ConfigurationController.List.Metadata.Description, ConfigurationSectionConstants.ConfigurationController.List.RouteName, ConfigurationSectionConstants.ConfigurationController.List.Defaults, ConfigurationSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageSettings))
                .Add(ConfigurationSectionConstants.ConfigurationController.New.Metadata.Title, ConfigurationSectionConstants.ConfigurationController.New.Metadata.Description, ConfigurationSectionConstants.ConfigurationController.New.RouteName, ConfigurationSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageSettings))
                .AddSeparator()
                .AddSubHeroUnit(StatisticsSectionConstants.Metadata.Title, StatisticsSectionConstants.Metadata.Description, StatisticsSectionConstants.RouteName, StatisticsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.MiscellaneousSection))
                .Add(StatisticsSectionConstants.RedirectorsController.List.Metadata.Title, StatisticsSectionConstants.RedirectorsController.List.Metadata.Description, StatisticsSectionConstants.RedirectorsController.List.RouteName, StatisticsSectionConstants.RedirectorsController.List.Defaults, StatisticsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageRedirectors))
                .Add(StatisticsSectionConstants.RedirectorsController.New.Metadata.Title, StatisticsSectionConstants.RedirectorsController.New.Metadata.Description, StatisticsSectionConstants.RedirectorsController.New.RouteName, StatisticsSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageRedirectors))
                .AddSubHeroUnit(TicketingSectionConstants.Metadata.Title, TicketingSectionConstants.Metadata.Description, TicketingSectionConstants.RouteName, TicketingSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.MiscellaneousSection))
                .Add(TicketingSectionConstants.TicketsController.List.Metadata.Title, TicketingSectionConstants.TicketsController.List.Metadata.Description, TicketingSectionConstants.TicketsController.List.RouteName, TicketingSectionConstants.TicketsController.List.Defaults, TicketingSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageTickets))
                .Add(TicketingSectionConstants.TicketsController.New.Metadata.Title, TicketingSectionConstants.TicketsController.New.Metadata.Description, TicketingSectionConstants.TicketsController.New.RouteName, TicketingSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageTickets))
                .AddSubHeroUnit(UtilitiesSectionConstants.Metadata.Title, UtilitiesSectionConstants.Metadata.Description, UtilitiesSectionConstants.RouteName, UtilitiesSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.MiscellaneousSection))
                .Add(UtilitiesSectionConstants.ToDosController.List.Metadata.Title, UtilitiesSectionConstants.ToDosController.List.Metadata.Description, UtilitiesSectionConstants.ToDosController.List.RouteName, UtilitiesSectionConstants.ToDosController.List.Defaults, UtilitiesSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageToDos))
                .Add(UtilitiesSectionConstants.ToDosController.New.Metadata.Title, UtilitiesSectionConstants.ToDosController.New.Metadata.Description, UtilitiesSectionConstants.ToDosController.New.RouteName, UtilitiesSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageToDos))
                .AddSeparator()
                .AddSubHeroUnit(MessagesSectionConstants.Metadata.Title, MessagesSectionConstants.Metadata.Description, MessagesSectionConstants.RouteName, MessagesSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.SystematicSection))
                .Add(MessagesSectionConstants.EmailAccountsController.List.Metadata.Title, MessagesSectionConstants.EmailAccountsController.List.Metadata.Description, MessagesSectionConstants.EmailAccountsController.List.RouteName, MessagesSectionConstants.EmailAccountsController.List.Defaults, MessagesSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageEmailAccounts))
                .Add(MessagesSectionConstants.EmailAccountsController.New.Metadata.Title, MessagesSectionConstants.EmailAccountsController.New.Metadata.Description, MessagesSectionConstants.EmailAccountsController.New.RouteName, MessagesSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageEmailAccounts))
                .AddInnerSeparator()
                .Add(MessagesSectionConstants.MessageTemplatesController.List.Metadata.Title, MessagesSectionConstants.MessageTemplatesController.List.Metadata.Description, MessagesSectionConstants.MessageTemplatesController.List.RouteName, MessagesSectionConstants.MessageTemplatesController.List.Defaults, MessagesSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageMessageTemplates))
                .Add(MessagesSectionConstants.MessageTemplatesController.New.Metadata.Title, MessagesSectionConstants.MessageTemplatesController.New.Metadata.Description, MessagesSectionConstants.MessageTemplatesController.New.RouteName, MessagesSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageMessageTemplates))
                .AddInnerSeparator()
                .Add(MessagesSectionConstants.ContentManagementletterSubscriptionsController.List.Metadata.Title, MessagesSectionConstants.ContentManagementletterSubscriptionsController.List.Metadata.Description, MessagesSectionConstants.ContentManagementletterSubscriptionsController.List.RouteName, MessagesSectionConstants.ContentManagementletterSubscriptionsController.List.Defaults, MessagesSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageNewsletterSubscriptions))
                .Add(MessagesSectionConstants.ContentManagementletterSubscriptionsController.New.Metadata.Title, MessagesSectionConstants.ContentManagementletterSubscriptionsController.New.Metadata.Description, MessagesSectionConstants.ContentManagementletterSubscriptionsController.New.RouteName, MessagesSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageNewsletterSubscriptions))
                .AddInnerSeparator()
                .Add(MessagesSectionConstants.QueuedEmailsController.List.Metadata.Title, MessagesSectionConstants.QueuedEmailsController.List.Metadata.Description, MessagesSectionConstants.QueuedEmailsController.List.RouteName, MessagesSectionConstants.QueuedEmailsController.List.Defaults, MessagesSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageQueuedEmails))
                .Add(MessagesSectionConstants.QueuedEmailsController.New.Metadata.Title, MessagesSectionConstants.QueuedEmailsController.New.Metadata.Description, MessagesSectionConstants.QueuedEmailsController.New.RouteName, MessagesSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageQueuedEmails))
                .AddSeparator()
                .AddSubHeroUnit(LocalizationSectionConstants.Metadata.Title, LocalizationSectionConstants.Metadata.Description, LocalizationSectionConstants.RouteName, LocalizationSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.SystematicSection))
                .Add(LocalizationSectionConstants.LanguagesController.List.Metadata.Title, LocalizationSectionConstants.LanguagesController.List.Metadata.Description, LocalizationSectionConstants.LanguagesController.List.RouteName, LocalizationSectionConstants.LanguagesController.List.Defaults, LocalizationSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageLanguages))
                .Add(LocalizationSectionConstants.LanguagesController.New.Metadata.Title, LocalizationSectionConstants.LanguagesController.New.Metadata.Description, LocalizationSectionConstants.LanguagesController.New.RouteName, LocalizationSectionConstants.SectionName)
                .AddInnerSeparator()
                .Add(LocalizationSectionConstants.StringResourcesController.List.Metadata.Title, LocalizationSectionConstants.StringResourcesController.List.Metadata.Description, LocalizationSectionConstants.StringResourcesController.List.RouteName, LocalizationSectionConstants.StringResourcesController.List.Defaults, LocalizationSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageStringResources))
                .Add(LocalizationSectionConstants.StringResourcesController.New.Metadata.Title, LocalizationSectionConstants.StringResourcesController.New.Metadata.Description, LocalizationSectionConstants.StringResourcesController.New.RouteName, LocalizationSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageStringResources))
                .AddSubHeroUnit(LoggingSectionConstants.Metadata.Title, LoggingSectionConstants.Metadata.Description, LoggingSectionConstants.RouteName, LoggingSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.SystematicSection))
                .Add(LoggingSectionConstants.ActivityTypesController.List.Metadata.Title, LoggingSectionConstants.ActivityTypesController.List.Metadata.Description, LoggingSectionConstants.ActivityTypesController.List.RouteName, LoggingSectionConstants.ActivityTypesController.List.Defaults, LoggingSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageActivityTypes))
                .Add(LoggingSectionConstants.ActivityTypesController.New.Metadata.Title, LoggingSectionConstants.ActivityTypesController.New.Metadata.Description, LoggingSectionConstants.ActivityTypesController.New.RouteName, LoggingSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageActivityTypes))
                .AddInnerSeparator()
                .Add(LoggingSectionConstants.ActivitiesController.List.Metadata.Title, LoggingSectionConstants.ActivitiesController.List.Metadata.Description, LoggingSectionConstants.ActivitiesController.List.RouteName, LoggingSectionConstants.ActivitiesController.List.Defaults, LoggingSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageActivities))
                .AddInnerSeparator()
                .Add(LoggingSectionConstants.LogsController.List.Metadata.Title, LoggingSectionConstants.LogsController.List.Metadata.Description, LoggingSectionConstants.LogsController.List.RouteName, LoggingSectionConstants.LogsController.List.Defaults, LoggingSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageLogs))
                .AddSubHeroUnit(TasksSectionConstants.Metadata.Title, TasksSectionConstants.Metadata.Description, TasksSectionConstants.RouteName, TasksSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.SystematicSection))
                .Add(TasksSectionConstants.ScheduleTasksController.List.Metadata.Title, TasksSectionConstants.ScheduleTasksController.List.Metadata.Description, TasksSectionConstants.ScheduleTasksController.List.RouteName, TasksSectionConstants.ScheduleTasksController.List.Defaults, TasksSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageScheduleTasks))
                .Add(TasksSectionConstants.ScheduleTasksController.New.Metadata.Title, TasksSectionConstants.ScheduleTasksController.New.Metadata.Description, TasksSectionConstants.ScheduleTasksController.New.RouteName, TasksSectionConstants.SectionName)
                .If(() => CheckUserization(StandardPermissionProvider.ManageScheduleTasks));

            return sectionBuilder;
        }

        [ChildActionOnly]
        public PartialViewResult ContentSection(string sectionName = null) {
            return PartialView(BuildSections(sectionName));
        }
    }
}